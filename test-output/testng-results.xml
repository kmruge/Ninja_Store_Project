<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="9" passed="7" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-06-03T23:30:12 IST" name="Suite" finished-at="2023-06-03T23:31:03 IST" duration-ms="50913">
    <groups>
    </groups>
    <test started-at="2023-06-03T23:30:12 IST" name="Test" finished-at="2023-06-03T23:31:03 IST" duration-ms="50913">
      <class name="TestCase.Login_Test">
        <test-method is-config="true" signature="setUp()[pri:0, instance:TestCase.Login_Test@1e1a0406]" started-at="2023-06-03T23:30:37 IST" name="setUp" finished-at="2023-06-03T23:30:41 IST" duration-ms="4146" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyLoginWithValidCredential(java.lang.String,java.lang.String,java.lang.reflect.Method)[pri:1, instance:TestCase.Login_Test@1e1a0406]" started-at="2023-06-03T23:30:41 IST" name="verifyLoginWithValidCredential" data-provider="dataExtraction" finished-at="2023-06-03T23:30:42 IST" duration-ms="584" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[muruSatJun03232853IST2023@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Mmuru@2004]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[void TestCase.Login_Test.verifyLoginWithValidCredential(java.lang.String,java.lang.String,java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginWithValidCredential -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:TestCase.Login_Test@1e1a0406]" started-at="2023-06-03T23:30:42 IST" name="tearDown" finished-at="2023-06-03T23:30:42 IST" duration-ms="293" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:TestCase.Login_Test@1e1a0406]" started-at="2023-06-03T23:30:42 IST" name="setUp" finished-at="2023-06-03T23:30:46 IST" duration-ms="4242" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyLoginWithValidCredential(java.lang.String,java.lang.String,java.lang.reflect.Method)[pri:1, instance:TestCase.Login_Test@1e1a0406]" started-at="2023-06-03T23:30:46 IST" name="verifyLoginWithValidCredential" data-provider="dataExtraction" finished-at="2023-06-03T23:30:47 IST" duration-ms="582" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[muruSatJun03232859IST2023@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Mmuru@2004]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[void TestCase.Login_Test.verifyLoginWithValidCredential(java.lang.String,java.lang.String,java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginWithValidCredential -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:TestCase.Login_Test@1e1a0406]" started-at="2023-06-03T23:30:47 IST" name="tearDown" finished-at="2023-06-03T23:30:47 IST" duration-ms="250" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:TestCase.Login_Test@1e1a0406]" started-at="2023-06-03T23:30:47 IST" name="setUp" finished-at="2023-06-03T23:30:51 IST" duration-ms="4110" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyLoginWithValidCredential(java.lang.String,java.lang.String,java.lang.reflect.Method)[pri:1, instance:TestCase.Login_Test@1e1a0406]" started-at="2023-06-03T23:30:51 IST" name="verifyLoginWithValidCredential" data-provider="dataExtraction" finished-at="2023-06-03T23:30:52 IST" duration-ms="591" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[muruSatJun03233018IST2023@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Mmuru@2004]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[void TestCase.Login_Test.verifyLoginWithValidCredential(java.lang.String,java.lang.String,java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginWithValidCredential -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:TestCase.Login_Test@1e1a0406]" started-at="2023-06-03T23:30:52 IST" name="tearDown" finished-at="2023-06-03T23:30:52 IST" duration-ms="243" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:TestCase.Login_Test@1e1a0406]" started-at="2023-06-03T23:30:52 IST" name="setUp" finished-at="2023-06-03T23:30:57 IST" duration-ms="5332" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyLoginWithInvalidCredential(java.lang.reflect.Method)[pri:2, instance:TestCase.Login_Test@1e1a0406]" started-at="2023-06-03T23:30:57 IST" name="verifyLoginWithInvalidCredential" finished-at="2023-06-03T23:30:58 IST" duration-ms="447" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[void TestCase.Login_Test.verifyLoginWithInvalidCredential(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Assertion Faile at void TestCase.Login_Test.verifyLoginWithInvalidCredential(java.lang.reflect.Method) expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Assertion Faile at void TestCase.Login_Test.verifyLoginWithInvalidCredential(java.lang.reflect.Method) expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at Utility.Utilise1.VerificationAssertion(Utilise1.java:67)
at TestCase.Login_Test.verifyLoginWithInvalidCredential(Login_Test.java:50)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginWithInvalidCredential -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:TestCase.Login_Test@1e1a0406]" started-at="2023-06-03T23:30:58 IST" name="tearDown" finished-at="2023-06-03T23:30:58 IST" duration-ms="245" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:TestCase.Login_Test@1e1a0406]" started-at="2023-06-03T23:30:58 IST" name="setUp" finished-at="2023-06-03T23:31:02 IST" duration-ms="4188" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyLoginWithoutCredential(java.lang.reflect.Method)[pri:3, instance:TestCase.Login_Test@1e1a0406]" started-at="2023-06-03T23:31:02 IST" name="verifyLoginWithoutCredential" finished-at="2023-06-03T23:31:03 IST" duration-ms="304" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[void TestCase.Login_Test.verifyLoginWithoutCredential(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Assertion Faile at void TestCase.Login_Test.verifyLoginWithoutCredential(java.lang.reflect.Method) expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Assertion Faile at void TestCase.Login_Test.verifyLoginWithoutCredential(java.lang.reflect.Method) expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at Utility.Utilise1.VerificationAssertion(Utilise1.java:67)
at TestCase.Login_Test.verifyLoginWithoutCredential(Login_Test.java:57)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginWithoutCredential -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:TestCase.Login_Test@1e1a0406]" started-at="2023-06-03T23:31:03 IST" name="tearDown" finished-at="2023-06-03T23:31:03 IST" duration-ms="252" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- TestCase.Login_Test -->
      <class name="TestCase.Register_Test">
        <test-method is-config="true" signature="setUp()[pri:0, instance:TestCase.Register_Test@614ca7df]" started-at="2023-06-03T23:30:12 IST" name="setUp" finished-at="2023-06-03T23:30:18 IST" duration-ms="5868" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="RegisterWithAllDetailsProperly(java.lang.reflect.Method)[pri:0, instance:TestCase.Register_Test@614ca7df]" started-at="2023-06-03T23:30:18 IST" name="RegisterWithAllDetailsProperly" finished-at="2023-06-03T23:30:20 IST" duration-ms="1598" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[void TestCase.Register_Test.RegisterWithAllDetailsProperly(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RegisterWithAllDetailsProperly -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:TestCase.Register_Test@614ca7df]" started-at="2023-06-03T23:30:20 IST" name="tearDown" finished-at="2023-06-03T23:30:20 IST" duration-ms="246" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:TestCase.Register_Test@614ca7df]" started-at="2023-06-03T23:30:20 IST" name="setUp" finished-at="2023-06-03T23:30:25 IST" duration-ms="4495" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="RegisterWithAllDetailsProperly(java.lang.reflect.Method)[pri:0, instance:TestCase.Register_Test@614ca7df]" started-at="2023-06-03T23:30:25 IST" name="RegisterWithAllDetailsProperly" finished-at="2023-06-03T23:30:26 IST" duration-ms="934" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[void TestCase.Register_Test.RegisterWithAllDetailsProperly(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RegisterWithAllDetailsProperly -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:TestCase.Register_Test@614ca7df]" started-at="2023-06-03T23:30:26 IST" name="tearDown" finished-at="2023-06-03T23:30:26 IST" duration-ms="273" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:TestCase.Register_Test@614ca7df]" started-at="2023-06-03T23:30:26 IST" name="setUp" finished-at="2023-06-03T23:30:30 IST" duration-ms="4503" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="RegisterWithExistEmail(java.lang.reflect.Method)[pri:0, instance:TestCase.Register_Test@614ca7df]" started-at="2023-06-03T23:30:30 IST" name="RegisterWithExistEmail" finished-at="2023-06-03T23:30:31 IST" duration-ms="870" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[void TestCase.Register_Test.RegisterWithExistEmail(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RegisterWithExistEmail -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:TestCase.Register_Test@614ca7df]" started-at="2023-06-03T23:30:31 IST" name="tearDown" finished-at="2023-06-03T23:30:32 IST" duration-ms="249" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:TestCase.Register_Test@614ca7df]" started-at="2023-06-03T23:30:32 IST" name="setUp" finished-at="2023-06-03T23:30:36 IST" duration-ms="4403" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="RegisterWithoutClickingPrivacy(java.lang.reflect.Method)[pri:0, instance:TestCase.Register_Test@614ca7df]" started-at="2023-06-03T23:30:36 IST" name="RegisterWithoutClickingPrivacy" finished-at="2023-06-03T23:30:37 IST" duration-ms="735" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[void TestCase.Register_Test.RegisterWithoutClickingPrivacy(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RegisterWithoutClickingPrivacy -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:TestCase.Register_Test@614ca7df]" started-at="2023-06-03T23:30:37 IST" name="tearDown" finished-at="2023-06-03T23:30:37 IST" duration-ms="240" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- TestCase.Register_Test -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
